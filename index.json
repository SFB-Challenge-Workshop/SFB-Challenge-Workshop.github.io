[
{
	"uri": "/1-cloudtrail-config/",
	"title": "CloudTrail &amp; Config",
	"tags": [],
	"description": "",
	"content": " Phần này sẽ hướng dẫn mọi người về việc cấu hình AWS Cloudtrail và AWS Config.\n Contents:\n AWS CloudTrail Config  AWS CloudTrail AWS CloudTrail là dịch vụ cho phép chúng ta thực hiện các tác vụ quản lý và kiểm tra vận hành cũng như giám sát các rủi ro đối với tài khoản AWS. Đối với các hoạt động xảy ra trên cơ sở hạ tầng AWS, CloudTrail cung cấp lịch sử các sự kiện bao gồm được thực hiện thông qua AWS Console, AWS SDK hay AWS CLI và AWS APIs.\n\r Truy cập vào Console CloudTrail. Chọn Trails.  Chọn Create trail. Ở bước Choose trail attributes, chúng ta sẽ nhập các thông tin tương tự như sau.  Sau khi hoàn tất, nhấn nút Next. Ở bước Choose log events, chúng ta sẽ giữ nguyên các giá trị mặc định. Sau khi hoàn tất, nhấn nút Next. Ở bước Review and create, chúng ta sẽ xem xét các giá trị đã nhập và thiết lập đã chọn. Nhấn nút Create trail để tiến hành khởi tạo.   Config AWS Config là một dịch vụ cho phép chúng ta đánh giá và kiểm tra cấu hình hệ thống liên quan đến các tài nguyên AWS. Chúng ta sẽ dễ dàng xem xét từng sự thay đổi của mỗi cấu hình và mối liên kết của các tài nguyên AWS.\n\r Từ AWS Console, truy cập vào dịch vụ AWS Config.  Nếu chúng ta thấy dòng chữ Get Started, chứng tở dịch vụ chưa được kích hoạt. Chúng ta tiến hành kích hoạt dịch vụ, nhấn vào nút Get Started. Ở bước Settings, chúng ta sẽ tiến hành chọn như các giá trị như sau.  Ở bước Rules, chúng ta sẽ để mặc định và không chọn bất kể giá trị nào. Ở bước Review, chúng ta sẽ xem xét lại các giá trị và thiết lập đã chọn.  Nhấn nút Confirm để tiến hành khởi tạo.  Một khi khởi tạo thành công, chúng ta sẽ được dịch chuyển đến màn hình Dashboard như sau. "
},
{
	"uri": "/",
	"title": "Architecture and Design Challenge",
	"tags": [],
	"description": "",
	"content": "Architecture and Design Challenge Case Study Go-Shop - an ecommerce start-up is in the early stages of their operations. Their current technical stack is LAMP (Linux – Apache – MySQL – PHP) which is all running on one of their desktop PC inside the office. As a start-up, Go-Shop is expected with a significant, rapid and un-quantified growth in the next few months.\n Their lack of provision for Disaster Recovery (Backup, Route 53, Cloud Formation) Their ability to configure their database and data access layer for high performance and throughput making the user experience in the browser very low latency even though a large portion of their user base will be from far away (RDS, Aurora, DynamoDB, Elasticache .. ) Effective distribution of load (Load balancer) A self-healing infrastructure that recovers from failed service instances (Autoscaling, Serverless) Security of data at rest and in transit (KMS, ACM) Securing access to the environment as the delivery team expands. (S2S VPN, Bastion Host, VPC, Sec Group, NACL) An archival strategy for inactive objects greater than 6 months (Backup / S3 / Glacier) Ability to easily manage and replicate multiple environments based on their blueprint architecture (Cloud Formation – CDK)  In addition to what is Go-Shop concerns, there is some challenge that the new architecture should resolve:\n Proactive maintenance by active monitoring and alerting with base-line metric. Enable traceability inside the architecture using logs and metrics in order provide the system ability to response and take action automatically to system changes or any alert, monitor and audit.  Objectives Go-Shop are very confident with their big ambitious but they still concerned about their system:\n Scaling to meet the demand, but with uncertainty around when and how much this demand will be they are very concerned about buying too much infrastructure too soon or not enough too late! Lack of provision for Disaster Recovery Ability to configure their database and data access layer for high performance and throughput Making the user experience in the browser very low latency even though a large portion of their user base will be from far away Effective distribution of load A self-healing infrastructure that recovers from failed service instances Security of data at rest and in transit Securing access to the environment as the delivery team expands An archival strategy for inactive objects greater than 6 months Ability to easily manage and replicate multiple environments based on their blueprint architecture.  The recommend system is expected to be a manageable, secure, scalable, high performance, efficient, elastic, highly available, fault tolerant and recoverable architecture that allows them to grow organically.\nProposed Diagram Contents In this lab, we have devides into parts below:\n CloudTrail \u0026amp; Config AWS VPC Aurora MySQL Amazon DMS Amazon ElastiCache Amazon WAF \u0026amp; ACM CloudFront \u0026amp; S3  "
},
{
	"uri": "/2-vpc/",
	"title": "VPC",
	"tags": [],
	"description": "",
	"content": " Phần này sẽ hướng dẫn mọi người về việc cấu hình VPC.\n Contents:\n VPC and Subnets VPN Site-to-Site  VPC and Subnets  Truy cập dịch vụ VPC Chọn Create VPC Ở mục VPC Settings  Chọn VPC and more  Nhập CIDR block: 10.0.0.0/16 Chọn số lượng AZs: 2 Chọn số lượng Public subnets: 2 Chọn số lượng Private subnets: 4 Chọn số lượng NAT gateway: 1 per AZ Chọn loại VPC Endpoints: S3 Gateway     Chúng ta sẽ có các subnets như sau: Chúng ta sẽ có S3 Gateway endpoint như sau: VPN Site-to-Site  Truy cập dịch vụ VPC Ở thanh điều hướng, chọn Customer gateways  Chọn Create customer gateway, ở mục Details:  Nhập name tag Nhập IP address là external IP của thiết bị ở on-premise Nhấn nút khởi tạo     Ở thanh điều hướng, chọn Virtual private gateways  Chọn Create virtual private gateway, ở mục Details:  Nhập name tag: để dễ nhận diện thì chúng ta lấy tên VPC đã được khởi tạo Nhấn nút khởi tạo   Sau khi khởi tạo thành công, chọn lab-vpc-vgw và nhấn nút Actions và chọn Attach to VPC:  Ở mục Available VPCs, chọn lab-vpc Nhấn nút tiến hành Kết quả:      Ở thanh điều hướng, chọn Site-to-Site VPN connections, nhấn nút Create VPN connection:  Nhập name tag Target gateway type: Chọn Virtual private gateway Customer gateway: Chọn Existing Routing options: Chọn BGP (phụ thuộc vào thiết bị) Local IPv4 network CIDR: nhập dãy CIDR ở phía on-premise Remote IPv4 network CIDR: nhập dãy CIDR của VPC Tunnel 1 Options: không thay đổi (phụ thuộc vào thiết bị) Tunnel 2 Options: không thay đổi (phụ thuộc vào thiết bị) Nhấn nút khởi tạo:     Sau khi khởi tạo thành công, chúng ta sẽ gửi phần cấu hình tương ứng cho Adminstrator quản lý ở on-premise, nhấn nút Download configuration.\n Chọn vendor của thiết bị Chọn platform của thiết bị Chọn software của thiết bị Chọn IKE version hỗ trợ của thiết bị  "
},
{
	"uri": "/3-aurora/",
	"title": "Aurora MySQL",
	"tags": [],
	"description": "",
	"content": " Phần này sẽ hướng dẫn mọi người về việc cấu hình Aurora trên AWS.\n Contents:\n Create RDS Subnet Group Create RDS Parameter Groups Provision Aurora cluster for MySQL Create RDS Proxy  Create RDS Subnet Group  Truy cập vào dịch vụ RDS. Ở thanh điều hướng, chọn Subnet groups.  Bắt đầu khởi tạo bằng việc nhấn nút Create DB subnet group  Ở mục Subnet group details  Nhập Name Nhập Description Chọn VPC đã khởi tạo   Ở mục Add subnets  Chọn AZs: ít nhất 2 zone khác nhau Chọn Subnets: ít nhất 2 private subnets   Tiến hành khởi tạo      Create RDS Parameter Groups Chúng ta sẽ tiến hành tạo lần lượt:\n Cluster DB Parameter Group DB Parameter Group   Truy cập vào dịch vụ RDS. Ở thanh điều hướng, chọn Parameter groups.  Bắt đầu khởi tạo bằng việc nhấn nút Create parameter group, ở mục Parameter group details:  Parameter group family: aurora-mysql8 Type: DB Cluster Parameter Group Nhập Group name Nhập Description Tiến hành khởi tạo   Lặp lại các bước trên với Type: DB Parameter Group:     Sau khi khởi tạo thành công, chúng ta có thể tiến hành thay đổi các giá trị cần thiết liên quan đến MySQL engine. Provision Aurora cluster for MySQL  Truy cập vào dịch vụ RDS. Ở thanh điều hướng, chọn Databases.  Bắt đầu khởi tạo bằng việc nhấn nút Create database.  Ở mục Choose a database creation method, chọn Standard create. Ở mục Engine options  Engine type: Amazon Aurora Edition: Amazon Aurora MySQL-Compatible Edition Engine version: Aurora MySQL 3.02.2 Templates: Production   Ở mục Settings  Nhập DB cluster identifier Nhập Master username (hạn chế sử dụng từ khoá admin) Chọn Manage master credentials in AWS Secrets Manager với encryption key default.   Ở mục Instance configuration: chọn DB instance class tuỳ thuộc vào cấu hình đang hoạt động ở on-premise (nên sử dụng các dòng Graviton-based) Ở mục Availability \u0026amp; durability: chọn Create an Aurora Replica or Reader node in a different AZ (recommended for scaled availability) Ở mục Connectivity  VPC: chọn VPC đã khởi tạo DB Subnet group: chọn Subnet Group đã khởi tạo Public access: No VPC security group (firewall): Create new và nhập tên cho thành phần này. Database port (hạn chế sử dụng port mặc định 3306)   Ở mục Database authentication: chọn Password authentication Ở mục Monitoring:  Chọn Turn on Performance Insights với retention period ít nhất 1 month hoặc phụ thuộc vào policy hiện có AWS KMS: default Chọn Turn on DevOps Guru Chọn Enable Enhanced monitoring   Ở mục Additional configuration:  DB cluster parameter group: Chọn group mới khởi tạo DB parameter group: Chọn group mới khởi tạo Backup retention period: 35 Chọn Enable encryption Log exports: Chọn các loại logs hỗ trợ:  Audit log Error log General log Slow query log   Maintenance: Không chọn Enable auto minor version upgrade nhằm giữ tính ổn định cho môi trường Production. Chọn Enable deletion protection   Tiến hành khởi tạo      Sau khi khởi tạo thành công, chúng ta sẽ truy cập dịch vụ Secrets Manager để tiến hành lấy credential cho việc truy cập.\nNhấn nút Retrieve secret value để lấy credential.\nNgoài ra, tuỳ thuộc vào ngôn ngữ lập trình mà ứng dụng đang sử dụng, chúng ta có thể tham khảo thêm ở mục Sample code.\nCreate RDS Proxy Amazon RDS Proxy là proxy cơ sở dữ liệu được sử dụng cho dịch vụ Amazon RDS nhằm giúp các ứng dụng có khả năng thay đổi quy mô tốt hơn, linh hoạt hơn đối với các lỗi cơ sở dữ liệu và bảo mật hơn.\n\r Truy cập vào dịch vụ RDS. Ở thanh điều hướng, chọn Proxies, nhấn nút Create proxy:  Ở mục Proxy configuration  Engine Family: MySQL Nhập Proxy identifier Chọn Require TLS Idle client connection timeout: 1h:30m (ít nhất là 30m)   Ở mục Target group configuration: chọn RDS đã khởi tạo Ở mục Connectivity: chọn VPC và subnets đã khởi tạo' Ở mục Authentication  Chọn Create IAM role Secret Manager secrets: chọn secret đã khởi tạo Client auth type: MySQL native password   Ở mục Advanced config, chọn Enable enhanced logging Tiến hành khởi tạo    Sau khi khởi tạo thành công, chúng ta cần đợi trạng thái của proxy chuyển sang Available trước khi kết nối.\n"
},
{
	"uri": "/4-dms/",
	"title": "Amazon DMS",
	"tags": [],
	"description": "",
	"content": " Phần này sẽ hướng dẫn mọi người về việc cấu hình DMS trên AWS phục vụ cho việc di chuyển cơ sở dữ liệu lên môi trương AWS Cloud.\n Contents:\n Create EC2 Security Group for replication instance Create replication instance  Prepare replication endpoints   Prepare before moving to migration task  S3 bucket IAM Role   Create migration task  Create EC2 Security Group for replication instance  Truy cập vào dịch vụ EC2 Ở thanh điều hướng, chọn Security Groups, nhấn nút Create security group.  Ở mục Basic details  Nhập Security group name Nhập Description Chọn VPC đã khởi tạo   Ở mục Inbound rules, nhất nút Add rule và thêm 1 rule như sau:  Type: Custom TCP hoặc MySQL/Aurora (nếu sử dụng port mặc định) Port range: port mà MySQL server ở on-premise đang sử dụng Source: IP address mà MySQL server ở on-premise đang sử dụng   Tiến hành khởi tạo    Sau khi khởi tạo thành công, ở Security Group của Aurora MySQL chúng ta sẽ thêm 1 inbound rule tương tự như trên với Source chính là security group đã khởi tạo này để mà Aurora MySQL cho phép truy cập từ replication instance.\nCreate replication instance  Truy cập vào dịch vụ DMS. Ở thanh điều hướng, chọn Replication instances, nhấn nút Create replication instance:  Ở mục Settings  Nhập Name Nhập Description   Ở mục Instance configuration  Chọn Instance class (có thể chọn .medium hoặc .large trở lên) Engine version: ít nhất là 3.4.x trở lên Multi AZ: Production workload   Ở mục Storage: ít nhất 50GB để chứa cache Ở mục Connectivity and security  VPC: chọn VPC đã khởi tạo Replication subnet group: chọn default-vpc- Chọn Public accessible nếu không có đường kết nối private tới on-premise. Đối với use-case hiện tại đã có thiết lập AWS VPN S2S nên replication instance sẽ kết nối xuống on-premise thông qua VPN. (Advanced Settings) VPC security groups: chọn group đã khởi tạo. (Advanced Settings) AWS KMS key: aws/dms   Tiến hành khởi tạo    Prepare replication endpoints Sau khi đã khởi tạo thành công replication instance, chúng ta sẽ tạo 2 endpoint lần lượt với kiểu Source endpoint (trỏ về MySQL server ở on-premise) và Target endpoint (trỏ về Aurora MySQL).\n Truy cập vào dịch vụ DMS. Ở thanh điều hướng, chọn Endpoints, nhấn nút Create endpoint:  Ở mục Endpoint type, chọn loại endpoint Ở mục Endpoint configuration  Nhập Endpoint identifier  Đối với trường hợp Source: giả sử tên của MySQL server Đối với trường hợp Target: giả sử tên của Aurora MySQL cluster   Chọn Source engine  Đối với trường hợp Source: MySQL Đối với trường hợp Target: Amazon Aurora MySQL   Nhập Access to endpoint database  Đối với trường hợp Source: chọn Provide access information manually và nhập lần lượt các thông tin cần thiết về truy cập. Đối với trường hợp Target: chọn AWS Secrets Manager và nhập ARN của Secret.     Ở mục Test endpoint connection (optional): tiến hành test kết nối từ replication instance đã khởi tạo đến thông tin endpoint đã điền. Nếu status là Successful, tiến hành khởi tạo. Nếu không, chúng ta cần kiểm tra kết nối AWS VPN S2S lẫn thiết bị ở phía on-premise nếu có đang thiết lập các network policies.    Sau đây là ví dụ khi khởi tạo Source Endpoint Sau đây là ví dụ khi khởi tạo Target Endpoint Prepare before moving to migration task Trước khi khởi tạo migration task, chúng ta cần chuẩn bị 1 S3 bucket và 1 IAM role.\n Với S3 bucket, đây sẽ là nơi chứa các Assessment Reports. Với IAM role, đây sẽ là thành phần cấp quyền truy cập S3 bucket cho dịch vụ DMS.  S3 bucket  Truy cập vào dịch vụ S3. Ở thanh điều hướng, chọn Buckets, nhấn nút Create bucket.  Ở mục General configuration:  Nhập Bucket name Chọn AWS Region tương ứng   Ở mục Block Public Access settings, chọn Block all public access:  Ở mục Default encryption  Encryption key type: Amazon S3-managed keys (SSE-S3) Bucket Key: Enable   Tiến hành khởi tạo    IAM Role  Truy cập vào dịch vụ IAM. Ở thanh điều hướng, chọn Roles, nhấn nút Create role.  Step 1:  Ở mục Trusted entity type, chọn AWS service Ở mục Use case, chọn DMS   Step 2, ở mục Add permissions, chọn permission policy chính là AmazonS3FullAccess (tuy nhiên, để tuân thủ best practice thì chúng ta nên khởi tạo 1 custom IAM policy với permisions vừa đủ để truy cập) Step 3, ở mục Role details, nhập Role name và tiến hành khởi tạo.    Đây là custom IAM policy để thay thế AWS managed policy ở trên.\n{  \u0026#34;Version\u0026#34;:\u0026#34;2012-10-17\u0026#34;,  \u0026#34;Statement\u0026#34;:[  {  \u0026#34;Effect\u0026#34;:\u0026#34;Allow\u0026#34;,  \u0026#34;Action\u0026#34;:[  \u0026#34;s3:PutObject\u0026#34;,  \u0026#34;s3:DeleteObject\u0026#34;,  \u0026#34;s3:GetObject\u0026#34;,  \u0026#34;s3:PutObjectTagging\u0026#34;  ],  \u0026#34;Resource\u0026#34;:[  \u0026#34;arn:aws:s3:::\u0026lt;s3-bucket-name\u0026gt;/*\u0026#34;  ]  },  {  \u0026#34;Effect\u0026#34;:\u0026#34;Allow\u0026#34;,  \u0026#34;Action\u0026#34;:[  \u0026#34;s3:ListBucket\u0026#34;,  \u0026#34;s3:GetBucketLocation\u0026#34;  ],  \u0026#34;Resource\u0026#34;:[  \u0026#34;arn:aws:s3:::\u0026lt;s3-bucket-name\u0026gt;\u0026#34;  ]  }  ] } Create migration task  Truy cập vào dịch vụ DMS. Ở thanh điều hướng, chọn Database migration tasks, nhấn nút Create task:  Ở mục Task configuration  Nhập Task identifier Chọn Replication instance đã khởi tạo Chọn Source database endpoint đã khởi tạo Chọn Target database endpoint đã khởi tạo Migration type: Migrate existing data and replicate ongoing changes   Ở mục Task settings  Target table preparation mode: Drop tables on target Stop task after full load completes: Don't stop Include LOB columns in replication: Full LOB mode Task logs: chọn Turn on CloudWatch logs   Ở mục Table mappings: đối với mục này, chúng ta sẽ thêm các selection rules nhằm chọn source và table hoặc loại đi một số table không cần thiết cho quá trình migration. Ngoài ra, còn có các transformation rules để thực hiện việc chuyển đổi dữ liệu. Ở mục Premigration assessment, chọn Enable premigration assessment run.  Nhập Premigration assessment run name Assessments to run: chọn tất cả Assessment report storage: chọn S3 bucket đã khởi tạo IAM role: chọn 1 IAM role đã khởi tạo   Tiến hành khởi tạo    Sau khi khởi tạo thành công, chúng ta tiến hành quá trình migration.\nĐầu tiên, chúng ta sẽ thực hiện bước đánh giá thông qua Premigration asessments, nhấn nút Actions và chọn Create premigration assessment.\nNếu quá trình đánh giá thuận lợi, chúng ta sẽ tiến hành bắt đầu bằng việc nhấn nút Actions và chọn Restart/Resume.\nNếu quá trình dịch chuyển thuận lợi, chúng ta sẽ quan sát được trạng thái như sau:\n"
},
{
	"uri": "/5-elasticache-redis/",
	"title": "Amazon ElastiCache",
	"tags": [],
	"description": "",
	"content": " Phần này sẽ hướng dẫn mọi người về việc cấu hình ElastiCache trên AWS phục vụ cho việc lưu trữ bộ nhớ cach với tốc độ truy xuât sao.\n Contents:\n ElastiCache Subnet Group ElastiCache Redis Cluster  ElastiCache Subnet Group  Truy cập vào dịch vụ ElastiCache Ở thanh điều hướng, chọn Subnet groups, nhấn nút Create subnet group:  Ở mục Subnet group settings  Nhập Name VPC ID: chọn VPC đã khởi tạo Selected subnets: chọn private subnets tương ứng   Tiến hành khởi tạo    ElastiCache Redis Cluster  Truy cập vào dịch vụ ElastiCache Ở thanh điều hướng, chọn Redis clusters, nhấn nút Create redis cluster:  Step 1:  Ở mục Choose a cluster creation method, chọn Configure and create a new cluster Ở mục Cluster mode, chọn Enabled Ở mục Cluster info:  Nhập Name Nhập Description   Ở mục Location  Location: AWS Cloud Multi-AZ: Enable   Ở mục Cluster settings:  Engine version: 6.2 Port: 6379 Node type: cache.t3.small trở lên Number of shards: 2 Replicas per shard: 2   Ở mục Connectivity:  Network type: IPv4 Subnet groups: chọn subnet group đã khởi tạo     Step 2  Ở mục Security:  Bật Encryption at rest Bật Encryption in transit Access control: tạm thời bỏ qua   Selected security groups: chọn security group đã khởi tạo Ở mục Backup:  Bật Enable automatic backups Backup retention period: ít nhất 7.   Ở mục Logs, chọn Log destination type là CloudWatch Logs và chọn Create a new log group:  Bật Slow logs Bật Engine logs        Sau khi khởi tạo thành công, chúng ta có cluster như sau: "
},
{
	"uri": "/6-acm-waf/",
	"title": "Amazon WAF &amp; ACM",
	"tags": [],
	"description": "",
	"content": " Phần này sẽ hướng dẫn mọi người về việc cấu hình WAF và quản lý SSL certifications.\n Contents:\n AWS ACM  Request SSL certificates Import SSL certificate   AWS WAF  AWS ACM Chúng ta sẽ cần ít nhất 2 certificate ở 2 vùng khác nhau:\n Để áp dụng cho các Load Balancer, chọn region là ap-southeast-1 (nơi đang triển khai ứng dụng). Để áp dụng cho các CloudFront distribution, chọn region us-east-1.  Request SSL certificates Sau đây là các bước chúng ta request 1 certificate miễn phí ở region đang triển khai ứng dụng.\n Truy cập vào dịch vụ ACM Ở thanh điều hướng chọn Request certificate:  Ở mục Certificate type, chọn Request a public certificate Ở mục Domain names, nhập các domain names tương ứng Ở mục Validation method, tuỳ vào chính sách, chúng ta có thể chọn DNS validation - recommended hoặc Email validation. Ở mục Key algorithm, chọn RSA 2048 Tiến hành khởi tạo    Import SSL certificate Sau đây là các bước chúng ta sử dụng certificate đã được issue ở nơi khác, chẳng hạn như từ Comodo hay Google.\n Truy cập vào dịch vụ ACM Ở thanh điều hướng chọn Import certificate:  Ở mục Certificate details, chúng ta cần nhập chính xác các thông số  Certificate body Certificate private key Certificate chain   Nếu các thông tin điền là chính xác, dịch vụ sẽ hiển thị thông tin liên quan đến Expiration Tiến hành khởi tạo    AWS WAF Chúng ta sẽ cần ít nhất 2 web acls ở 2 vùng khác nhau:\n Để áp dụng cho các Load Balancer, chọn region là ap-southeast-1 (nơi đang triển khai ứng dụng). Để áp dụng cho các CloudFront distribution, chọn region Global  Chúng ta sẽ lặp lại các bước sau để khởi tạo 2 web acls như đã miêu tả ở trên.\n Truy cập vào dịch vụ WAF Ở thanh điều hướng chọn Web ACLs, chọn Region tương ứng và nhấn nút Create web ACL  Step 1:  Ở mục Web ACL details  Nhập Name Nhập CloudWatch metric name Resource type  Đối với CloudFront: chọn CloudFront distributions Đối với Load Balancer: chọn Regional resources (Application Load Balancer, API Gateway, AWS AppSync, Amazon Cognito User Pools)     Ở mục Associated AWS resources - optional, chúng ta sẽ bỏ qua tạm thời do chưa khởi tạo các thành phần liên quan.   Step 2:  Ở mục Rules, nhấn nút Add rules, chọn Add managed rules  AWS managed rule groups:  Paid: tạm thời bỏ qua Free: chọn Core rule set:      Ở mục Default web ACL action for requests that don\u0026rsquo;t match any rules, chọn Allow   Step 3: tạm thời do chỉ có 1 rule nên chúng ta sẽ chưa cần cấu hình priorities:  Step 4: giữ nguyên các giá trị mặc định:  Tiến hành khởi tạo sau khi đã review.    Sau khi khởi tạo công, chúng ta sẽ tiến hành đến phần chuẩn bị CloudFront \u0026amp; S3 cho static contents cũng như triển khai ứng dụng thông qua dịch vụ Elastic Beanstalk.\n"
},
{
	"uri": "/7-cloudfront-s3/",
	"title": "CloudFront &amp; S3",
	"tags": [],
	"description": "",
	"content": " Phần này sẽ hướng dẫn mọi người về việc cấu hình sử dụng các resource tĩnh được cung cấp từ một S3 bucket.\n Contents:\n Static Contents with CloudFront \u0026amp; S3  S3 block public access S3 bucket for static contents CloudFront    Static Contents with CloudFront \u0026amp; S3 S3 block public access  Truy cập vào dịch vụ S3. Ở thanh điều hướng, chọn Block Public Access settings for account:  Nhấn nút Block all public access  S3 bucket for static contents Chúng ta sẽ khởi tạo hai S3 buckets:\n 1 cho việc chứa static contents cũng như sẽ là Origin của CloudFront distribution 1 cho việc chứa logs của CloudFront distribution  Chúng ta sẽ lặp lại các bước sau để khởi tạo 2 buckets:\n Truy cập vào dịch vụ S3. Ở thanh điều hướng, chọn Buckets, nhấn nút Create bucket:  Ở mục General configuration:  Nhập Bucket name Chọn AWS Region tương ứng   Ở mục Block Public Access settings, chọn Block all public access:  Ở mục Default encryption:  Encryption key type: Amazon S3-managed keys (SSE-S3) Bucket Key: Enable   Tiến hành khởi tạo    Sau khi khởi tạo thành công, chúng ta sẽ có bucket như sau: CloudFront  Truy cập vào dịch vụ CloudFront. Ở thanh điều hướng, chọn Distributions, nhấn nút Create distribution.  Ở mục Origin:  Origin domain: chọn \u0026lt;s3-bucket-name\u0026gt;.s3.amazonaws.com đã khởi tạo Origin access: chọn Origin access control settings (recommended):    Ở mục Default cache behavior:  Compress objects automatically: Yes Viewer protocol policy: Redirect HTTP to HTTPS hoặc HTTPS only (phụ thuộc vào ứng dụng) Allowed HTTP methods: GET, HEAD   Ở mục Cache key and origin requests:  Ở mục Settings:  Price class: Use North America, Europe, Asia, Middle East, and Africa AWS WAF web ACL: chọn WAF đã khởi tạo Alternate domain name (CNAME): thêm CNAME phụ thuộc vào ứng dụng Custom SSL certificate: chọn ACM certificate đã khởi tạo Standard logging: On và chọn S3 bucket đã khởi tạo      Sau cùng, chúng ta cần thêm vào S3 bucket policy nội dung tương tự sau:\n{  \u0026#34;Version\u0026#34;: \u0026#34;2008-10-17\u0026#34;,  \u0026#34;Id\u0026#34;: \u0026#34;PolicyForCloudFrontPrivateContent\u0026#34;,  \u0026#34;Statement\u0026#34;: [  {  \u0026#34;Sid\u0026#34;: \u0026#34;AllowCloudFrontServicePrincipal\u0026#34;,  \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,  \u0026#34;Principal\u0026#34;: {  \u0026#34;Service\u0026#34;: \u0026#34;cloudfront.amazonaws.com\u0026#34;  },  \u0026#34;Action\u0026#34;: \u0026#34;s3:GetObject\u0026#34;,  \u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:s3:::\u0026lt;s3-bucket-name\u0026gt;/*\u0026#34;,  \u0026#34;Condition\u0026#34;: {  \u0026#34;StringEquals\u0026#34;: {  \u0026#34;AWS:SourceArn\u0026#34;: \u0026#34;arn:aws:cloudfront::\u0026lt;aws-account-id\u0026gt;:distribution/\u0026lt;cloudfront-distribution-id\u0026gt;\u0026#34;  }  }  }  ] } Sau khi khởi tạo thành công, chúng ta có thể truy cập tới Distribution thông qua DNS mặc định để kiểm tra kết nối. Sau đó, chúng ta cần trỏ CNAME từ domain đến DNS này. "
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]